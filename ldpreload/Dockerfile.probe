############################
# builder: 只用来编译和收集依赖
############################
FROM mirror.gcr.io/library/python:3.11-slim AS builder

# APT 改 https；装编译链、OpenBLAS 头文件和 CA 证书
RUN set -eux; \
  if [ -f /etc/apt/sources.list.d/debian.sources ]; then \
    sed -i 's|http://deb.debian.org|https://deb.debian.org|g; s|http://security.debian.org|https://security.debian.org|g' /etc/apt/sources.list.d/debian.sources; \
  fi; \
  if [ -f /etc/apt/sources.list ]; then \
    sed -i 's|http://|https://|g' /etc/apt/sources.list; \
  fi; \
  apt-get update; \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    build-essential ca-certificates libopenblas-dev; \
  rm -rf /var/lib/apt/lists/*

WORKDIR /src
# 你的探针源码（文件名按你项目里实际为准）
COPY libblasprobe_roofline_modes.c .
# 一个小的 SGEMM 自测程序（可选）
COPY sgemm_test.c .

# 产物都放到 /out/opt/probe 下，避免污染系统目录
RUN mkdir -p /out/opt/probe/lib /out/opt/probe/bin

# 编译 LD_PRELOAD 探针
RUN gcc -O2 -fPIC -shared -o /out/opt/probe/lib/libblasprobe.so \
      libblasprobe_roofline_modes.c -ldl -lpthread

# 编译一个小测试程序（链接 openblas）
RUN gcc -O2 -o /out/opt/probe/bin/sgemm_test sgemm_test.c -lopenblas

# 把 OpenBLAS 及其运行时依赖一股脑“扔进” /opt/probe/lib（扁平化）
RUN set -eux; \
  oblas=$(ldconfig -p | awk '/libopenblas\.so/{print $4; exit}'); \
  cp -v "$oblas" /out/opt/probe/lib/; \
  # 收集它依赖的 .so
  ldd "$oblas" | awk '/=> \\/|\\//{print $(NF-1)}' | while read -r dep; do \
    [ -f "$dep" ] && cp -v "$dep" /out/opt/probe/lib/ || true; \
  done; \
  # 常见的运行时（有则拷，无则跳过）
  for n in libgfortran.so libquadmath.so; do \
    p=$(ldconfig -p | awk -v n="$n" '$1 ~ n {print $4; exit}'); \
    [ -n "$p" ] && cp -v "$p" /out/opt/probe/lib/ || true; \
  done

############################
# runtime: 极简，只有探针与依赖
############################
FROM mirror.gcr.io/library/python:3.11-slim AS runtime

# 带上 CA 证书（如果后续需要 https 出网）
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

# 只复制我们自己的前缀，避免和 /lib、/usr/lib 等系统目录冲突
COPY --from=builder /out/opt/probe /opt/probe

# 运行期环境：让动态链接器能找到我们打包的依赖，并启用 LD_PRELOAD 探针
ENV LD_LIBRARY_PATH=/opt/probe/lib:$LD_LIBRARY_PATH
ENV LD_PRELOAD=/opt/probe/lib/libblasprobe.so
ENV PATH=/opt/probe/bin:$PATH

# 默认跑自测程序；真实使用时会在 K8s 里覆盖
CMD ["sgemm_test"]
